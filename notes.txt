conencted & connection with destination ID 6 (7 in configure)

return sends a message with an extra byte for the desintation field.

Trying to push labels:


pushing labels
debug data [235, 0, 0, 0, 0, 3, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97]
DEBUG label message [16, 2, 235, 0, 0, 0, 0, 3, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 22, 236, 16, 3]
BEBUG BYTES b'\x10\x02\xeb\x00\x00\x00\x00\x03aaaaaaaaaaaaaaaa\x16\xec\x10\x03'
b'\x10\x06'



-------------------------------------
DEBUG THE ROUTER

TELNET on 172.16.255.10 port 55555

(if ssh'd into MCS, enter telnet 172.16.255.10 55555

enter following into telnet session with router to enable debug info:
audit/update 105
audit/update 70


-------------------------------------

---------------------------------
BUGS ?
CE-8119 UI does not update correctly when swp overpatches a previous SWP path
(does not update the connected source, through the routing does change. - confusing?
COnnected destination does change
end up being undbale to remove from UI as well as its displaying a stale patch that does not actuall exist,

also, labels, of faders do not update when overpatching like this.

NOTE, if you push a label to a dest, we update all dests fed from the same source with that label.... I guess thats oK
but it was a bit unexpected, and compounded when the wrong source is displayed on the fader.




losing connection but connection status still connected? (check pinging)
router debug says error system 104

todo - salvos (from CSV)
todo - test extended labels
todo - test setting longer label lengths

------------------------------------------------------
prot04 - looking into proper DLE handling.
Mixer accepts my source 16/DLE command surprisingly??
... But I do not parse the returned connected message - check DLE DLE

Output (no response for source 16 (DLE!)):

C:\Users\peterw\PycharmProjects\SWP08-Probel>python prot04.py
#################### ConnectIO - SWP08 router controller ####################
connection: IP connection established with address 192.169.1.201 on port 61000

EXTRACTED MESSAGES:
[connection.py.run]: DATA RECEIVED b'\x10\x06\x10\x02\x04\x00\x00\x00\n\x05\xed\x10\x03\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x02\x04\x00\x00\x01\x0b\x05\xeb\x10\x03\x10\x02\x04\x00\x00\x02\x0c\x05\x
e9\x10\x03\x10\x02\x04\x00\x00\x03\r\x05\xe7\x10\x03\x10\x02\x04\x00\x00\x04\x0e\x05\xe5\x10\x03\x10\x02\x04\x00\x00\x05\x0f\x05\xe3\x10\x03\x10\x02\x04\x00\x00\x06\x10\x10\x05\xe1\x10\x03\x10\x02\x04\x00\x00\x07\x11\x05\xdf\x10\x03\x10\
x02\x04\x00\x00\x08\x12\x05\xdd\x10\x03\x10\x02\x04\x00\x00\t\x13\x05\xdb\x10\x03'

swp_unpack DATA DUMP b'\x10\x06\x10\x02\x04\x00\x00\x00\n\x05\xed\x10\x03\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x06\x10\x02\x04\x00\x00\x01\x0b\x05\xeb\x10\x03\x10\x02\x04\x00\x00\x02\x0c\x05\xe9\x10\x03\x10
\x02\x04\x00\x00\x03\r\x05\xe7\x10\x03\x10\x02\x04\x00\x00\x04\x0e\x05\xe5\x10\x03\x10\x02\x04\x00\x00\x05\x0f\x05\xe3\x10\x03\x10\x02\x04\x00\x00\x06\x10\x10\x05\xe1\x10\x03\x10\x02\x04\x00\x00\x07\x11\x05\xdf\x10\x03\x10\x02\x04\x00\x0
0\x08\x12\x05\xdd\x10\x03\x10\x02\x04\x00\x00\t\x13\x05\xdb\x10\x03'

message recieved:
b'\x10\x02\x04\x00\x00\x00\n\x05\xed\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 0 - 10 - 5 - 237 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 10, Destination: 0,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x00\n\x05\xed\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\x01\x0b\x05\xeb\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 1 - 11 - 5 - 235 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 11, Destination: 1,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x01\x0b\x05\xeb\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\x02\x0c\x05\xe9\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 2 - 12 - 5 - 233 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 12, Destination: 2,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x02\x0c\x05\xe9\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\x03\r\x05\xe7\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 3 - 13 - 5 - 231 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 13, Destination: 3,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x03\r\x05\xe7\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\x04\x0e\x05\xe5\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 4 - 14 - 5 - 229 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 14, Destination: 4,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x04\x0e\x05\xe5\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\x05\x0f\x05\xe3\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 5 - 15 - 5 - 227 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 15, Destination: 5,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x05\x0f\x05\xe3\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\x07\x11\x05\xdf\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 7 - 17 - 5 - 223 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 17, Destination: 7,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x07\x11\x05\xdf\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\x08\x12\x05\xdd\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 8 - 18 - 5 - 221 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 18, Destination: 8,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\x08\x12\x05\xdd\x10\x03'
message recieved:
b'\x10\x02\x04\x00\x00\t\x13\x05\xdb\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 9 - 19 - 5 - 219 - 16 - 3 - SWP08 Message object - Command: connected, Matrix: 0, Level: 0, Multiplier: 0, Source: 19, Destination: 9,
Labels: False
Encoded: b'\x10\x02\x04\x00\x00\t\x13\x05\xdb\x10\x03'


----------------------------------
All messages start with SOM, but SOM is two bytes - DLE (\x10) & STX (\x02)
- DLE is a special byte..
- ...Apart from SOM & EOM (& NAK/ACK?) Wherever the byte \x10 / 16 dec needs to be sent, it should be followed directly
     with another one... I.E. within payload inside of SOM/EON, when sending, any ocurence of DLE should
     have another DLE inserted after it, and on receiving end strip them
     ... how to diff from two sep 16's? - they woudl be 16 16 16 16... never an odd number.
     ... so if you find a DLE \x10 and it does not have another behind it, then its a header or eom.


