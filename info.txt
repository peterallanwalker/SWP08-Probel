Calrec SW-P-08

TCP port - 61000





On making this patch from Assist: 

SWPO8 Sources (out) 1 -> SWP08 Destinations (in) 1

Matrix 1, Level 2, ID 11 -> Matrix 1, Level 1, ID 21

The following message is received from the mixer:

b'\x10\x02\x04\x00\x00\x14\n\x05\xd9\x10\x03'

SOM - \x10\x02
DATA - x04\x00\x00\x14\n
BTC - \x05
CHK - \xd9
EOM - \x10\x03

DATA - x04\x00\x00\x14\n
COMMAND - x04 - CROSSPOINT CONNECTED
MESSAGE - \x00\x00\x14\n

MATRIX/LEVEL - \x00   bits 4-7 = Matrix, bits 0-3 - Level (0 & 0... set to 1, 1 in Configure)... So source and dest have to be in both the same matrix and level?
MULTIPLIER - \x00 
DESTINATION - \x14 - dec 20 (21 entered in Configure)
SOURCE - \n == \x6e - dec 110! (11 in configure, but on level 2)

... try changing all to be on same level.

patch made from VPB-1-1 -> VPB-2-1
1/1/1 -> 1/1/11
... new message received:
b'\x10\x02\x04\x00\x00\n\x00\x05\xed\x10\x03'
crosspoint connected message - x00\x00\n\x00
Matrix 0, level 0, destination - 110, source 0


NEW MESG BEING SENT:
x\n x\x00
CHK - \x10
BTC - \x05

SENDING: b'\x10\x02
\x02
\x00 x H x \x00
\x05
\x10
\x10\x03'

----------------------------------------------

SENDING: b'\x10\x02\x02\x00x\x06ex\x00\x05\x08\x10\x03'

RECEIVED: b'\x10\x02\x04\x00\x00\n\x00\x05\xed\x10\x03'

SOM: \x10\x02
EOM: \x10\x03

Sent: x02\x00x\x06ex\x00
Recd: x04\x00\x00\n\x00

Sent: \x02 = Connect   (tx)
Recd: \x04 = Connected (rx)

Sent data:\x00 x \x06 e x \x00  (BTC = 6?)
Recd data:\x00 \x00 \n \x00 (BTC = 4, + CMD = 5)

-----------------------------------------------------

SENT: b'\x10\x02 \x02 \x00 \x00 x \x06 e x \x00 \x05 \x02   \x10\x03'
RECD: b'\x10\x02 \x04 \x00 \x00 \n         \x00 \x05 \xed   \x10\x03'
---------------------------------------------------------------------
SENT: b'\x10\x00\x02\x00\x00n\x00\x05\x10\x10\x03'
RECD: b'\x10\x02\x04\x00\x00\n\x00\x05\xed\x10\x03'
----------------------------------------------------------------------

SENT: b'\x10\x02 \x02 \x00 \x00 n  \x00 \x05\x10\x10\x03'
RECD: b'\x10\x02 \x04 \x00 \x00 \n \x00 \x05\xed\x10\x03'

----------------------------------------------------------------
OK debugged my data, still not right, think checksum is wrong now.
try sending the same command to mixer as received back on change, to compare checksums!...

SENDING: b'\x10\x02\x04\x00\x00\n\x00\x05\x10\x10\x03'
length 11
16 - 2 - 4 - 0 - 0 - 10 - 0 - 5 - 16 - 16 - 3 -

message recieved:
b'\x10\x02\x04\x00\x00\n\x00\x05\xed\x10\x03'
len 11
16 - 2 - 4 - 0 - 0 - 10 - 0 - 5 - 237 - 16 - 3 -


... SO messages are encoded right but wrong checksum, mixer sends 237, I'm calculating 16
hardcoding the checksum, I get a reponse, so think its right, jsut need to check how I'm calculating the cehcksum

checksum - 
CHK = Checksum (8 bit, 2's compliment of DATA & BTC) 1byte
try reverse calculation... how DATA & BTC == 237?

DATA = 4,0,0,10,0 BT = 5, SUM = 19 = bin 0001 0011 = twos comp = 11101101 = 237!

... SO should be easy to figure out where I'm going wrong now?

... got it working and refactored, new tests:
Encoded: b'\x10\x02\x04\x00\x00\n\x00\x05\xed\x10\x03' - generated from connected source - 0 dest 10 should matcht the following received from mixer:
	 b'\x10\x02\x04\x00\x00\n\x00\x05\xed\x10\x03'

!!! success!

Now, to tidy it up and add the decode function
should probably consider writing the server side, virtual router, add CSCP support as well - do this in Rust though, 

start thinking about the data model for a gui


------------------------------------------------------
LABELS - 
debug data [235, 0, 0, 0, 0, 3, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97, 97]
235 - CMD

BEBUG BYTES b'\x10\x02\xeb\x00\x00\x00\x00\x03aaaaaaaaaaaaaaaa\x16\xec\x10\x03'
\x10\02 - SOM (same as connect message) DLE = \x10, STX = \x02


\x10\x03 - EOM (same as connect message) DLE = \x10, ETX - \x03 

